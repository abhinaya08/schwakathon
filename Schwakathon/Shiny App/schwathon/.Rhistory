shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
command = "python"
# Note the single + double quotes in the string (needed if paths have spaces)
path2script='"C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/crawlers.py"'
# Build up args in a vector
string = "-i stock.txt"
#pattern = "---"
args = c(string, pattern)
args
# Add path to script as first arg
allArgs = c(path2script, string)
allArgs
system2(command, args=allArgs, stdout=TRUE)
# Build up args in a vector
string = "-i C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/stock.txt"
# Add path to script as first arg
allArgs = c(path2script, string)
system2(command, args=allArgs, stdout=TRUE)
system2("python C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/crawlers.py -i C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/stock.txt")
?system2
system("python C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/crawlers.py -i C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/stock.txt")
system("python C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/crawlers.py -i C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/stock.txt",wait= FALSE)
?system
system("python crawlers.py -i stock.txt")
system2("python crawlers.py -i stock.txt")
?system2
command = "python"
# Note the single + double quotes in the string (needed if paths have spaces)
path2script='"C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/crawlers.py"'
# Build up args in a vector
string = "-i C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/stock.txt"
# Build up args in a vector
string = "C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/stock.txt"
# Add path to script as first arg
allArgs = c(path2script, string)
system(command, args=allArgs, stdout=TRUE)
system2(command, args=allArgs, stdout=TRUE)
system2(command, args=allArgs)
# Build up args in a vector
string = "-i C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/stock.txt"
# Add path to script as first arg
allArgs = c(path2script, string)
system2(command, args=allArgs)
observeEvent(input$gettrend,{c(
system2("python C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/crawlers.py -i C:/Users/abhin/Documents/Schwathon/financeSpiders-master/financeSpiders-master/financeScraper/stock.txt"),
system("python python_codes/export_scraped_data.py"))
})
system("python python_codes/export_scraped_data.py")
system("python python_codes/export_scraped_data.py")
system("python python_codes/export_scraped_data.py")
runApp()
runApp()
runApp()
runApp()
library(DT)
runApp()
my_data <- read.delim("stock.txt")
my_data <- read.delim("stock.txt")
my_data
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinycssloaders")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?uiOutput
runApp()
runApp()
runApp()
recommendation <- read.csv("return_simulation_5range_interest.csv")
head(recommendation)
library(plotly)
head(recommendation)
plot_ly(recommendation, x = ~X, y = ~V1, mode = "markers", type = "scatter", color = ~Class, source = "subset",
marker = list(size = 30))
plot_ly(recommendation, x = ~X, y = ~V1)
plot_ly(recommendation, x = ~X,type="histogram")
plot_ly(recommendation, x = ~V1,type="histogram")
?plot_ly
runApp()
runApp()
runApp()
runApp()
runApp()
plot_ly(recommendation, x = ~V1,type="histogram")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot_ly(recommendation, x = ~V1,type="histogram",color = "mediumseagreen")
?plot_ly
plot_ly(recommendation, x = ~V1,type="histogram",colors = "mediumseagreen")
plot_ly(recommendation, x = ~V1,type="histogram",colors = "Set1")
plot_ly(recommendation, x = ~V1,type="histogram",color = "red")
plot_ly(recommendation, x = ~V1,type="histogram",color = "green")
plot_ly(recommendation, x = ~V1,type="histogram",colors = "green")
plot_ly(recommendation, x = ~V1,type="histogram",colors = "red")
runApp()
?plot_ly
plot_ly(recommendation, x = ~V1,type="histogram",colors = "red",xlab = "Density")
x <- list(
title = "Return when principle = $100000",
titlefont = f
)
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Return when principle = $100000",
titlefont = f
)
y <- list(
title = "Density",
titlefont = f
)
plot_ly(recommendation, x = ~V1,type="histogram",colors = "red") %>%
layout(xaxis = x, yaxis = y)
runApp()
runApp()
shiny::runApp()
